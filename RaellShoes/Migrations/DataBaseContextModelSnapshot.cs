// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RaellShoes.Data;

namespace RaellShoes.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("RaellShoes.Models.Clientes.Cartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apelido");

                    b.Property<int>("Bandeira");

                    b.Property<int>("ClienteId");

                    b.Property<string>("CodigoSeguranca");

                    b.Property<string>("NomeImpresso");

                    b.Property<string>("Numero");

                    b.Property<bool>("Preferencial");

                    b.Property<int>("TipoCartao");

                    b.Property<string>("Validade");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Cartao");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int?>("EstadoId");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(14);

                    b.Property<DateTime>("DataNascimento");

                    b.Property<int?>("EnderecoId");

                    b.Property<bool>("FlagCobranca");

                    b.Property<bool>("FlagEntrega");

                    b.Property<int>("Genero");

                    b.Property<string>("Nome")
                        .IsRequired();

                    b.Property<string>("Sobrenome")
                        .IsRequired();

                    b.Property<bool>("Status");

                    b.Property<int?>("TelefoneId");

                    b.Property<int?>("UsuarioId");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("TelefoneId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apelido")
                        .IsRequired();

                    b.Property<string>("Bairro")
                        .IsRequired();

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<int?>("CidadeId");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Complemento");

                    b.Property<string>("Logradouro")
                        .IsRequired();

                    b.Property<string>("Numero")
                        .IsRequired();

                    b.Property<string>("Observacoes");

                    b.Property<int>("TipoEndereco");

                    b.Property<int>("TipoLogradouro");

                    b.Property<int>("TipoResidencia");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("ClienteId");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.Property<int?>("PaisId");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estado");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("DDD")
                        .IsRequired();

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("TipoTelefone");

                    b.HasKey("Id");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("RaellShoes.Models.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("RaellShoes.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Cartao", b =>
                {
                    b.HasOne("RaellShoes.Models.Clientes.Cliente")
                        .WithOne("Cartao")
                        .HasForeignKey("RaellShoes.Models.Clientes.Cartao", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Cidade", b =>
                {
                    b.HasOne("RaellShoes.Models.Clientes.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Cliente", b =>
                {
                    b.HasOne("RaellShoes.Models.Clientes.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.HasOne("RaellShoes.Models.Clientes.Telefone", "Telefone")
                        .WithMany()
                        .HasForeignKey("TelefoneId");

                    b.HasOne("RaellShoes.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId");
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Endereco", b =>
                {
                    b.HasOne("RaellShoes.Models.Clientes.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId");

                    b.HasOne("RaellShoes.Models.Clientes.Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RaellShoes.Models.Clientes.Estado", b =>
                {
                    b.HasOne("RaellShoes.Models.Clientes.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId");
                });
#pragma warning restore 612, 618
        }
    }
}
